import jsPDF from 'jspdf';
import { QuizResult } from '../types';

export const generateFlowchartPDF = (result: QuizResult, studentName: string) => {
  const pdf = new jsPDF();
  const pageWidth = pdf.internal.pageSize.getWidth();
  const pageHeight = pdf.internal.pageSize.getHeight();
  const margin = 20;
  
  // Title
  pdf.setFontSize(24);
  pdf.setFont('helvetica', 'bold');
  pdf.setTextColor(41, 128, 185);
  pdf.text('Career Guidance Flowchart', pageWidth / 2, 30, { align: 'center' });
  
  // Student name
  pdf.setFontSize(16);
  pdf.setFont('helvetica', 'normal');
  pdf.setTextColor(0, 0, 0);
  pdf.text(`Student: ${studentName}`, margin, 50);
  
  // Current position
  let yPosition = 70;
  
  // Step 1: Assessment Results
  pdf.setFontSize(14);
  pdf.setFont('helvetica', 'bold');
  pdf.setFillColor(52, 152, 219);
  pdf.setTextColor(255, 255, 255);
  pdf.roundedRect(margin, yPosition, pageWidth - 2 * margin, 15, 3, 3, 'F');
  pdf.text('1. Assessment Results', pageWidth / 2, yPosition + 10, { align: 'center' });
  
  yPosition += 25;
  pdf.setTextColor(0, 0, 0);
  pdf.setFont('helvetica', 'normal');
  pdf.text(`Recommended Stream: ${result.stream}`, margin + 10, yPosition);
  yPosition += 10;
  pdf.text(`Assessment Score: ${result.score}/100`, margin + 10, yPosition);
  
  // Draw arrow
  yPosition += 15;
  pdf.setDrawColor(52, 152, 219);
  pdf.setLineWidth(2);
  pdf.line(pageWidth / 2 - 5, yPosition, pageWidth / 2 + 5, yPosition + 10);
  pdf.line(pageWidth / 2, yPosition + 10, pageWidth / 2 - 5, yPosition + 5);
  pdf.line(pageWidth / 2, yPosition + 10, pageWidth / 2 + 5, yPosition + 5);
  
  // Step 2: Course Options
  yPosition += 20;
  pdf.setFont('helvetica', 'bold');
  pdf.setFillColor(52, 152, 219);
  pdf.setTextColor(255, 255, 255);
  pdf.roundedRect(margin, yPosition, pageWidth - 2 * margin, 15, 3, 3, 'F');
  pdf.text('2. Recommended Courses', pageWidth / 2, yPosition + 10, { align: 'center' });
  
  yPosition += 25;
  pdf.setTextColor(0, 0, 0);
  pdf.setFont('helvetica', 'normal');
  
  result.recommendations.slice(0, 3).forEach((course, index) => {
    pdf.text(`${index + 1}. ${course.name}`, margin + 10, yPosition);
    yPosition += 8;
    pdf.setFontSize(10);
    pdf.text(`   Duration: ${course.duration}`, margin + 15, yPosition);
    yPosition += 8;
    pdf.setFontSize(12);
  });
  
  // Draw arrow
  yPosition += 10;
  pdf.setDrawColor(52, 152, 219);
  pdf.line(pageWidth / 2 - 5, yPosition, pageWidth / 2 + 5, yPosition + 10);
  pdf.line(pageWidth / 2, yPosition + 10, pageWidth / 2 - 5, yPosition + 5);
  pdf.line(pageWidth / 2, yPosition + 10, pageWidth / 2 + 5, yPosition + 5);
  
  // Step 3: College Options
  yPosition += 20;
  pdf.setFont('helvetica', 'bold');
  pdf.setFillColor(52, 152, 219);
  pdf.setTextColor(255, 255, 255);
  pdf.roundedRect(margin, yPosition, pageWidth - 2 * margin, 15, 3, 3, 'F');
  pdf.text('3. Recommended Colleges', pageWidth / 2, yPosition + 10, { align: 'center' });
  
  yPosition += 25;
  pdf.setTextColor(0, 0, 0);
  pdf.setFont('helvetica', 'normal');
  
  result.colleges.slice(0, 3).forEach((college, index) => {
    pdf.text(`${index + 1}. ${college.name}`, margin + 10, yPosition);
    yPosition += 8;
    pdf.setFontSize(10);
    pdf.text(`   Location: ${college.location}, ${college.district}`, margin + 15, yPosition);
    yPosition += 8;
    pdf.text(`   Type: ${college.type}`, margin + 15, yPosition);
    yPosition += 10;
    pdf.setFontSize(12);
  });
  
  // Draw arrow
  yPosition += 5;
  pdf.setDrawColor(52, 152, 219);
  pdf.line(pageWidth / 2 - 5, yPosition, pageWidth / 2 + 5, yPosition + 10);
  pdf.line(pageWidth / 2, yPosition + 10, pageWidth / 2 - 5, yPosition + 5);
  pdf.line(pageWidth / 2, yPosition + 10, pageWidth / 2 + 5, yPosition + 5);
  
  // Step 4: Future Goals
  yPosition += 20;
  pdf.setFont('helvetica', 'bold');
  pdf.setFillColor(46, 204, 113);
  pdf.setTextColor(255, 255, 255);
  pdf.roundedRect(margin, yPosition, pageWidth - 2 * margin, 15, 3, 3, 'F');
  pdf.text('4. Future Career Paths', pageWidth / 2, yPosition + 10, { align: 'center' });
  
  yPosition += 25;
  pdf.setTextColor(0, 0, 0);
  pdf.setFont('helvetica', 'normal');
  
  const careerPaths = {
    Science: ['Engineering', 'Medical', 'Research & Development', 'Technology'],
    Commerce: ['Business Management', 'Finance & Banking', 'Accounting', 'Economics'],
    Arts: ['Teaching', 'Civil Services', 'Media & Journalism', 'Social Work']
  };
  
  const paths = careerPaths[result.stream as keyof typeof careerPaths] || [];
  paths.forEach((path, index) => {
    pdf.text(`â€¢ ${path}`, margin + 10, yPosition);
    yPosition += 8;
  });
  
  // Footer
  pdf.setFontSize(10);
  pdf.setTextColor(128, 128, 128);
  pdf.text('Generated by Disha - Career Guidance Platform', pageWidth / 2, pageHeight - 20, { align: 'center' });
  pdf.text(`Date: ${new Date().toLocaleDateString()}`, pageWidth / 2, pageHeight - 10, { align: 'center' });
  
  // Save PDF
  pdf.save(`${studentName}_Career_Flowchart.pdf`);
};